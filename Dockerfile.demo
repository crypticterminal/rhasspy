FROM homeassistant/home-assistant:latest

ARG BUILD_ARCH=amd64
LABEL maintainer="Michael Hansen <hansen.mike@gmail.com>"

ENV LANG C.UTF-8

VOLUME /config
VOLUME /rhasspy
WORKDIR /

RUN apt-get update && \
    apt-get install -y python3 python3-pip python3-dev \
        build-essential portaudio19-dev swig \
        sox espeak alsa-utils \
        openjdk-8-jre \
        vlc

# Install Python dependencies
COPY requirements.txt /requirements.txt
RUN python3 -m pip install --no-cache-dir wheel
RUN python3 -m pip install --no-cache-dir -r /requirements.txt

# Install Pocketsphinx Python module with no sound
RUN python3 -m pip install https://github.com/synesthesiam/pocketsphinx-python/releases/download/v1.0/pocketsphinx-python.tar.gz

# Install JSGF sentence generator
RUN cd / && wget -qO - https://github.com/synesthesiam/jsgf-gen/releases/download/v1.0/jsgf-gen.tar.gz | tar xzf - && \
    ln -s /jsgf-gen/bin/jsgf-gen /usr/bin/jsgf-gen

# Install phoentisaurus
RUN cd / && wget -qO - https://github.com/synesthesiam/phonetisaurus-2013/releases/download/v1.0-$BUILD_ARCH/phonetisaurus_2013-1_$BUILD_ARCH.deb > /phonetisaurus.deb && \
    dpkg -i /phonetisaurus.deb && \
    rm /phonetisaurus.deb

# Install opengrm
RUN cd / && wget -qO - https://github.com/synesthesiam/docker-opengrm/releases/download/v1.3.4-$BUILD_ARCH/openfst_1.6.9-1_$BUILD_ARCH.deb > openfst.deb && \
    dpkg -i /openfst.deb && \
    rm /openfst.deb

RUN cd / && wget -qO - https://github.com/synesthesiam/docker-opengrm/releases/download/v1.3.4-$BUILD_ARCH/opengrm_1.3.4-1_$BUILD_ARCH.deb > opengrm.deb && \
    dpkg -i /opengrm.deb && \
    rm /opengrm.deb

# Copy my code
COPY *.py /usr/share/rhasspy/
COPY profiles/ /usr/share/rhasspy/profiles/
COPY dist/ /usr/share/rhasspy/dist/
COPY bin/pico2wave /usr/bin/

# Use home assistant URL inside container
RUN sed -i -e 's|http://hassio/homeassistant/|http://localhost:8123/|' /usr/share/rhasspy/profiles/defaults.json
RUN sed -i -e 's|"api_password": ""|"api_password": "secret"|' /usr/share/rhasspy/profiles/defaults.json

# Demo config
COPY etc/homeassistant/config /config

# Add /usr/local/lib to load path
RUN ldconfig

# Copy script to run
COPY docker/demo.sh /run.sh
RUN chmod a+x /run.sh

CMD ["/run.sh"]