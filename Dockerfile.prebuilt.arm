ARG BUILD_FROM
FROM $BUILD_FROM
LABEL maintainer="Michael Hansen <hansen.mike@gmail.com>"

ARG BUILD_ARCH
ENV LANG C.UTF-8
ENV DEBIAN_FRONTEND=noninteractive

ARG MAKE_THREADS=4

WORKDIR /

COPY etc/qemu-arm-static /usr/bin/
COPY etc/qemu-aarch64-static /usr/bin/

RUN apt-get update && \
    apt-get install -y bash jq wget \
        build-essential portaudio19-dev swig \
        libatlas-base-dev \
        sox espeak alsa-utils \
        cmake git \
        autoconf libtool automake bison \
        sphinxbase-utils sphinxtrain

# Install phoentisaurus (prebuilt)
RUN cd / && wget -q https://github.com/synesthesiam/phonetisaurus-2013/releases/download/v1.0-${BUILD_ARCH}/phonetisaurus_2013-1_${BUILD_ARCH}.deb
RUN dpkg -i /*.deb && rm -f /*.deb

# Install mitlm
COPY etc/mitlm-0.4.2.tar.xz /
RUN cd / && tar -xf mitlm-0.4.2.tar.xz && cd mitlm-0.4.2/ && \
    ./configure && \
    make -j $MAKE_THREADS && \
    make install && \
    rm -rf /mitlm-0.4.2*

# Install Python dependencies
RUN python3 -m pip install wheel
COPY requirements.txt /requirements.txt
RUN python3 -m pip install -r /requirements.txt

# Install Pocketsphinx Python module with no sound
COPY etc/pocketsphinx-python.tar.gz /
RUN python3 -m pip install /pocketsphinx-python.tar.gz && \
    rm -rf /pocketsphinx-python*

# Install snowboy
COPY etc/snowboy-1.3.0.tar.gz /
RUN if [ "$BUILD_ARCH" != "aarch64" ]; then pip3 install --no-cache-dir /snowboy-1.3.0.tar.gz; fi

# Install Mycroft Precise
# TODO: Look for aarch64 version
COPY etc/precise-engine_0.2.0_armhf.tar.gz /precise-engine.tar.gz
RUN cd / && tar -xzf /precise-engine.tar.gz && \
    ln -s /precise-engine/precise-engine /usr/bin/precise-engine && \
    rm /precise-engine.tar.gz

RUN ldconfig

# Copy bw and mllr_solve to /usr/bin
RUN find / -name bw -exec cp '{}' /usr/bin/ \;
RUN find / -name mllr_solve -exec cp '{}' /usr/bin/ \;

# Copy my code
COPY profiles/de/ /usr/share/rhasspy/profiles/de/
COPY profiles/it/ /usr/share/rhasspy/profiles/it/
COPY profiles/es/ /usr/share/rhasspy/profiles/es/
COPY profiles/fr/ /usr/share/rhasspy/profiles/fr/
COPY profiles/it/ /usr/share/rhasspy/profiles/it/
COPY profiles/nl/ /usr/share/rhasspy/profiles/nl/
COPY profiles/en/ /usr/share/rhasspy/profiles/en/
COPY profiles/defaults.json /usr/share/rhasspy/profiles/
COPY docker/rhasspy /usr/share/rhasspy/bin/
COPY dist/ /usr/share/rhasspy/dist/
COPY etc/wav/* /usr/share/rhasspy/etc/wav/
COPY *.py /usr/share/rhasspy/
COPY rhasspy/*.py /usr/share/rhasspy/rhasspy/

# Copy script to run
COPY docker/run.sh /run.sh
RUN chmod a+x /run.sh

ENV CONFIG_PATH /data/options.json

CMD ["/run.sh"]
