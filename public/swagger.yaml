openapi: "3.0.0"
info:
  title: 'Rhasspy Voice Assistant'
  version: '1.0'
  description: 'API for Rhasspy Voice Assistant Toolkit'
schemes:
  - http
paths:
  /api/profiles:
    get:
      summary: 'Get available profiles'
      produces: 
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
  /api/profile:
    get:
      summary: 'Get profile settings'
      produces: 
        - application/json
      parameters:
      - in: query
        name: profile
        description: 'Profile name or default profile if not specified'
        schema:
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
  /api/listen_for_wake:
    post:
      summary: 'Make Rhasspy listen for the wake word'
      produces: 
        - application/json
      parameters:
      - in: query
        name: profile
        description: 'Profile name or default profile if not specified'
        schema:
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
  /api/microphones:
    get:
      summary: 'Get list of available microphones'
      produces: 
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
  /api/pronounce:
    post:
      summary: 'Pronounce a word or set of phonemes'
      produces: 
        - text/plain
        - audio/wav
      requestBody:
        description: 'Word of phonemes to pronounce'
        required: true
        content:
          text/plain:
            schema:
              type: string
      parameters:
      - in: query
        name: pronounce_type
        description: 'Input type'
        required: true
        schema:
          type: string
          enum: [word, phonemes]
      - in: query
        name: download
        description: 'Return WAV file instead of using speakers'
        schema:
          type: boolean
          default: false
      - in: query
        name: speed
        description: 'Speed in words per minute (default: 80)'
        schema:
          type: integer
          default: 80
      - in: query
        name: voice
        description: 'Voice/language to use (defaults to profile language)'
        schema:
          type: string
      - in: query
        name: profile
        description: 'Profile name or default profile if not specified'
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
            audio/wav:
              schema:
                type: string
                format: binary
  /api/phonemes:
    get:
      summary: 'Get examples of phonemes for a profile'
      produces: 
        - application/json
      parameters:
      - in: query
        name: profile
        description: 'Profile name or default profile if not specified'
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
  /api/sentences:
    get:
      summary: 'Get example sentences for profile'
      produces: 
        - text/plain
      parameters:
      - in: query
        name: profile
        description: 'Profile name or default profile if not specified'
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
    post:
      summary: 'Overwrite example sentences for profile'
      requestBody:
        description: 'Example sentences in ini/jsgf format'
        required: true
        content:
          text/plain:
            schema:
              type: string
      parameters:
      - in: query
        name: profile
        description: 'Profile name or default profile if not specified'
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /api/custom_words:
    get:
      summary: 'Get custom words for profile'
      produces: 
        - text/plain
      parameters:
      - in: query
        name: profile
        description: 'Profile name or default profile if not specified'
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
    post:
      summary: 'Overwrite custom workds for profile'
      requestBody:
        description: 'Custom words as a CMU dictionary'
        required: true
        content:
          text/plain:
            schema:
              type: string
      parameters:
      - in: query
        name: profile
        description: 'Profile name or default profile if not specified'
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /api/unknown_words:
    get:
      summary: 'Get unknown words for profile'
      produces: 
        - application/json
      parameters:
      - in: query
        name: profile
        description: 'Profile name or default profile if not specified'
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
  /api/train:
    post:
      summary: 'Re-train speech/intent recognizers for profile'
      parameters:
      - in: query
        name: profile
        description: 'Profile name or default profile if not specified'
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /api/reload:
    post:
      summary: 'Force Rhasspy to reload speech/intent recognizers for a profile'
      parameters:
      - in: query
        name: profile
        description: 'Profile name or default profile if not specified'
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /api/speech-to-text:
    post:
      summary: 'Transcribe WAV data to text'
      requestBody:
        description: 'WAV data (16-bit 16Khz mono preferred)'
        required: true
        content:
          audio/wav:
            schema:
              type: string
              format: binary
      parameters:
      - in: query
        name: profile
        description: 'Profile name or default profile if not specified'
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /api/text-to-intent:
    post:
      summary: 'Extract intent from text and send to Home Assistant'
      requestBody:
        description: 'Text command'
        required: true
        content:
          text/plain:
            schema:
              type: string
      parameters:
      - in: query
        name: profile
        description: 'Profile name or default profile if not specified'
        schema:
          type: string
      - in: query
        name: nohass
        description: 'True if intent should NOT be sent to Home Assistant'
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
  /api/speech-to-intent:
    post:
      summary: 'Transcribe WAV data, extract intent, and send to Home Assistant'
      requestBody:
        description: 'WAV data (16-bit 16Khz mono preferred)'
        required: true
        content:
          audio/wav:
            schema:
              type: string
              format: binary
      parameters:
      - in: query
        name: profile
        description: 'Profile name or default profile if not specified'
        schema:
          type: string
      - in: query
        name: nohass
        description: 'True if intent should NOT be sent to Home Assistant'
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
  /api/start-recording:
    post:
      summary: 'Record WAV file from microphone until stopped'
      parameters:
      - in: query
        name: device_index
        description: 'PyAudio recording device index'
        schema:
          type: integer
          default: -1
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /api/stop-recording:
    post:
      summary: 'Stop recording WAV file, transcribe, extract intent, and send to Home Assistant'
      parameters:
      - in: query
        name: profile
        description: 'Profile name or default profile if not specified'
        schema:
          type: string
      - in: query
        name: nohass
        description: 'True if intent should NOT be sent to Home Assistant'
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
